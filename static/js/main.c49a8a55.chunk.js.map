{"version":3,"sources":["components/button.module.css","components/layout.module.css","components/screenStyle.module.css","components/power.module.css","components/bodyStyle.module.css","sound/808RS.wav","components/layout.js","components/CalculatorBody.js","components/screen.js","components/button.js","components/PowerButtons.js","components/MemoryButtons.js","logic/operators.js","logic/calculate.js","logic/keyboardMapping.js","app.js","index.js"],"names":["module","exports","Layout","props","className","layoutStyle","outerFrame","app","children","href","target","CalculatorBody","bodyStyle","body","Screen","screenContent","power","screenStyle","screen","off","Button","onClick","clickHandler","e","data","color","buttonStyle","button","small","contents","PowerButtons","muted","toggleMuted","powerStyle","frame","volumeDiv","MemoryButtons","changeMemory","recallMemory","clearMemory","toggleSign","operators","a","b","toPrecision","sqrt","Math","calculate","operand","operation","x","console","log","listeningFunction","clear","displayResult","enterDigit","enterOperation","parseInt","key","numbers","createNumberCol","array","rows","startIndex","callback","arraySection","slice","map","el","App","useState","setMuted","rs","Audio","sample","playSound","currentTime","play","display","updateDisplay","clearDisplayOnNextDigit","updateClearDisplayOnNextDigit","updateOperand","memory","updateMemory","operationState","updateOperation","powerState","updatePowerState","digit","toString","length","newValue","parseFloat","concat","excecute","value","useEffect","handler","window","addEventListener","removeEventListener","state","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c49a8a55.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3Pz0r\",\"black\":\"button_black__3RnQ0\",\"brown\":\"button_brown__2f98C\",\"yellow\":\"button_yellow__vLuNc\",\"green\":\"button_green__13sp-\",\"powerGreen\":\"button_powerGreen__2hK5G\",\"powerRed\":\"button_powerRed__37brT\",\"small\":\"button_small__3SP67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"outerFrame\":\"layout_outerFrame__URv2q\",\"app\":\"layout_app__uwqAF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screen\":\"screenStyle_screen__LFTJ9\",\"off\":\"screenStyle_off__2X_2N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frame\":\"power_frame__2Gh2Y\",\"volume\":\"power_volume__3FVF6\",\"volumeDiv\":\"power_volumeDiv__3VXt7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"bodyStyle_body__1BJ9G\"};","export default __webpack_public_path__ + \"static/media/808RS.58f20ff2.wav\";","import React, { useEffect, useState } from \"react\";\nimport layoutStyle from \"./layout.module.css\";\nimport sample from \"../sound/808RS.wav\";\nconst Layout = (props) => {\n  return (\n    <div className={layoutStyle.outerFrame}>\n      <div className={layoutStyle.app}>{props.children}</div>\n      <div className=\"d-flex justify-center\">\n        <a\n          href=\"https://knapptr.github.io/tknapp/\"\n          target=\"__blank\"\n          className=\"footerText\"\n        >\n          Created by Tyler Knapp\n        </a>\n        <a\n          href=\"https://github.com/Knapptr/calculator\"\n          target=\"__blank\"\n          className=\"footerText\"\n        >\n          See the code on github.\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport bodyStyle from \"./bodyStyle.module.css\";\nconst CalculatorBody = (props) => {\n  return <div className={bodyStyle.body}>{props.children}</div>;\n};\nexport default CalculatorBody;\n","import React from \"react\";\nimport screenStyle from \"./screenStyle.module.css\";\n\nconst Screen = ({ screenContent, power }) => {\n  return (\n    <div className={screenStyle.screen}>\n      <span className={power ? \"\" : screenStyle.off}>{screenContent}</span>\n    </div>\n  );\n};\nexport default Screen;\n","import React from \"react\";\nimport buttonStyle from \"./button.module.css\";\nconst Button = (props) => {\n  return (\n    <button\n      onClick={\n        !props.clickHandler\n          ? null\n          : (e) => {\n              props.clickHandler(props.data);\n            }\n      }\n      className={`${props.className ? props.className : \"\"} ${\n        props.color ? buttonStyle[props.color] : \"\"\n      } ${buttonStyle.button} ${props.small ? buttonStyle.small : \"\"}`}\n    >\n      {props.contents}\n    </button>\n  );\n};\nexport default Button;\n","import React from \"react\";\nimport Button from \"./button\";\nimport powerStyle from \"./power.module.css\";\nconst PowerButtons = ({ clickHandler, muted, toggleMuted }) => {\n  return (\n    <div className={`${powerStyle.frame}`}>\n      <div className=\"d-flex flex-col align-center\">\n        <Button\n          color=\"powerGreen\"\n          className=\"d-block\"\n          contents=\" \"\n          small={true}\n          data={true}\n          clickHandler={clickHandler}\n        />\n        <div className=\"dot\"></div>\n        <div className=\"powerIcon\">⚫</div>\n      </div>\n      <div className=\"d-flex flex-col align-center \">\n        <Button\n          color=\"powerRed\"\n          className=\"d-block smallButton\"\n          contents=\" \"\n          data={false}\n          small={true}\n          clickHandler={clickHandler}\n        />\n        <div className=\"dot\"></div>\n        <div className=\"powerIcon\">〇</div>\n      </div>\n      <div className=\"d-flex flex-col align-center\">\n        <Button\n          contents={\n            <div className={powerStyle.volumeDiv}>\n              {muted ? (\n                <i className=\"fas fa-volume-mute\"></i>\n              ) : (\n                <i className=\"fas fa-volume-up\"></i>\n              )}\n            </div>\n          }\n          clickHandler={toggleMuted}\n          small={true}\n          color=\"brown\"\n        />\n      </div>\n    </div>\n  );\n};\nexport default PowerButtons;\n","import React from \"react\";\nimport Button from \"./button\";\n\nconst MemoryButtons = ({\n  changeMemory,\n  recallMemory,\n  clearMemory,\n  toggleSign,\n}) => {\n  return (\n    <div>\n      <Button\n        color=\"green\"\n        data=\"+\"\n        contents=\"M+\"\n        clickHandler={changeMemory}\n      />\n      <Button\n        color=\"green\"\n        data=\"MR\"\n        contents=\"MR\"\n        clickHandler={recallMemory}\n      />\n      <Button\n        color=\"green\"\n        data=\"MC\"\n        contents=\"MC\"\n        clickHandler={clearMemory}\n      />\n      <Button\n        color=\"green\"\n        data=\"-\"\n        contents=\"M-\"\n        clickHandler={changeMemory}\n      />\n      <Button\n        color=\"green\"\n        data=\"+/-\"\n        contents=\"+/-\"\n        clickHandler={toggleSign}\n      />\n    </div>\n  );\n};\nexport default MemoryButtons;\n","const operators = {\n  \"+\": (a, b) => +(a + b).toPrecision(8),\n  \"-\": (a, b) => +(a - b).toPrecision(8),\n  \"/\": (a, b) => +(a / b).toPrecision(8),\n  \"*\": (a, b) => +(a * b).toPrecision(8),\n  \"^%\": (a, b) => +(((b / a) * 100 - 100) / 100).toPrecision(8),\n  \"^\": (a, b) => +(a ** b).toPrecision(8),\n  sqrt: (a, b) => +Math.sqrt(b).toPrecision(8),\n};\nexport default operators;\n","import operators from \"./operators\";\nfunction calculate(operand, operation, x) {\n  console.log(operation);\n  return operators[operation](operand, x);\n}\nexport default calculate;\n","const listeningFunction = ({\n  clear,\n  displayResult,\n  enterDigit,\n  enterOperation,\n}) => {\n  return (e) => {\n    if (parseInt(e.key) >= 0 && parseInt(e.key) <= 9) {\n      enterDigit(parseInt(e.key));\n    } else if (e.key === \"Enter\" || e.key === \"=\") {\n      displayResult();\n    } else if (\n      e.key === \"+\" ||\n      e.key === \"-\" ||\n      e.key === \"/\" ||\n      e.key === \"*\"\n    ) {\n      enterOperation(e.key);\n    } else if (e.key === \"c\") {\n      clear();\n    } else if (e.key === \".\") {\n      enterDigit(\".\");\n    }\n  };\n};\n\nexport default listeningFunction;\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"./components/layout\";\nimport CalculatorBody from \"./components/CalculatorBody\";\nimport Screen from \"./components/screen\";\nimport Button from \"./components/button\";\nimport PowerButtons from \"./components/PowerButtons\";\nimport MemoryButtons from \"./components/MemoryButtons\";\nimport calculate from \"./logic/calculate\";\nimport listeningFunction from \"./logic/keyboardMapping\";\nimport sample from \"./sound/808RS.wav\";\nimport appStyle from \"./app.module.css\";\n// Make number array to map from\nconst numbers = [7, 4, 1, 8, 5, 2, 9, 6, 3];\n\nconst createNumberCol = (array, rows, startIndex, callback = null) => {\n  let arraySection = array.slice(startIndex, startIndex + rows);\n  return (\n    <div className=\"col\">\n      {arraySection.map((el) => (\n        <Button\n          contents={el}\n          data={el}\n          clickHandler={callback}\n          color={\"black\"}\n        />\n      ))}\n    </div>\n  );\n};\n\nconst App = () => {\n  //////////////////////////////////////// //Sound\n  // I'm really not happy with this implementation\n  // It's simple, but I'd really prefer to work directly with\n  // the web Audio api\n  // after a lot of fussing around\n  // I haven't been able to get it to work\n  // I'll need to revisit this\n  const [muted, setMuted] = useState(false);\n  let rs = new Audio(sample);\n  const playSound = () => {\n    if (!muted) {\n      rs.currentTime = 0;\n      rs.play();\n    }\n  };\n  const toggleMuted = () => {\n    setMuted(!muted);\n  };\n  ////////////////////////////////////////;\n  //state needed:\n  // current display --\n  // operand --updates after clicking operand. pushes current display to operand\n  // memory -- utilized by memory buttons\n  // current operation -- select operation\n  ////////////////////////////////////////STATE\n  const [display, updateDisplay] = useState(0);\n  const [clearDisplayOnNextDigit, updateClearDisplayOnNextDigit] = useState(\n    false\n  );\n  const [operand, updateOperand] = useState(0);\n  const [memory, updateMemory] = useState(0);\n  const [operationState, updateOperation] = useState(null);\n  const [powerState, updatePowerState] = useState(true);\n  /////////////////////////////////////////////////////////\n  ////////////////////////////////////////\n\n  const enterDigit = (digit) => {\n    if (clearDisplayOnNextDigit) {\n      playSound();\n      updateDisplay(digit);\n      updateClearDisplayOnNextDigit(false);\n    } else {\n      if (display.toString().length < 10) {\n        let newValue = parseFloat(display.toString().concat(digit));\n        if (digit === \".\") {\n          newValue = `${newValue}.`;\n        }\n        playSound();\n        updateDisplay(newValue);\n      }\n    }\n  };\n  ///////////////////////// percentage functions\n  const percentValue = () => {\n    if (operationState) {\n      const value = calculate(operand, \"*\", display / 100);\n      updateOperand(calculate(operand, operationState, value));\n\n      updateOperation(null);\n    }\n  };\n\n  const enterOperation = (operation) => {\n    playSound();\n    updateOperand(display);\n    if (operationState) {\n      excecute(operationState);\n    }\n    updateClearDisplayOnNextDigit(true);\n    updateOperation(operation);\n  };\n\n  const excecute = (operation) => {\n    let value = calculate(operand, operation, display);\n    updateOperand(value);\n    return value;\n  };\n  ///////////////////////////////////I had to re-run calculate here because I can't think of a good way\n  ///////////////////////////////////to use the useEffect hook in order to get a value calculated by excecute\n  /////////////////////////////////// There is PROBABLY a better way to do this :(\n  const displayResult = () => {\n    playSound();\n    if (operationState !== null) {\n      excecute(operationState);\n      updateDisplay(calculate(operand, operationState, display));\n      updateOperation(null);\n    } else {\n      updateDisplay(operand);\n    }\n    updateClearDisplayOnNextDigit(true);\n  };\n  //////////////////////////////////pos negative switch\n  const toggleSign = () => {\n    playSound();\n    updateDisplay(display - display * 2);\n  };\n  ///////////////////////////////////////////// Memory functions\n  const changeMemory = (operation) => {\n    playSound();\n    updateClearDisplayOnNextDigit(true);\n    updateMemory(calculate(memory, operation, display));\n  };\n  const recallMemory = () => {\n    playSound();\n    updateDisplay(memory);\n  };\n  const clearMemory = () => {\n    playSound();\n    updateMemory(0);\n  };\n  ////////////////////////////////////////Clear Functions\n  const clear = () => {\n    playSound();\n    updateDisplay(0);\n    updateOperation(null);\n    updateOperand(0);\n  };\n  const powerButton = (state) => {\n    playSound();\n    updatePowerState(state);\n  };\n  useEffect(() => {\n    clear();\n  }, [powerState]);\n  ////////////////////////////////////////\n  const handler = listeningFunction({\n    clear,\n    enterDigit,\n    enterOperation,\n    displayResult,\n  });\n  useEffect(() => {\n    window.addEventListener(\"keypress\", handler);\n    return () => {\n      window.removeEventListener(\"keypress\", handler);\n    };\n  });\n  ////////////////////////////////////////\n  return (\n    <Layout>\n      <CalculatorBody>\n        <Screen power={powerState} screenContent={display} />\n        <PowerButtons\n          clickHandler={powerButton}\n          toggleMuted={toggleMuted}\n          muted={muted}\n        />\n        <div className=\"d-flex flex-col \">\n          <MemoryButtons\n            recallMemory={recallMemory}\n            clearMemory={clearMemory}\n            changeMemory={changeMemory}\n            toggleSign={toggleSign}\n          />\n          <div className=\"d-flex\">\n            {/* Middle Section */}\n\n            <div className=\"col\">\n              <Button\n                color=\"brown\"\n                contents=\"Δ%\"\n                data=\"^%\"\n                clickHandler={enterOperation}\n              />\n              <Button\n                color=\"brown\"\n                contents=\"√\"\n                data=\"sqrt\"\n                clickHandler={enterOperation}\n              />\n              <Button color=\"brown\" contents=\"%\" clickHandler={percentValue} />\n            </div>\n\n            <div className=\"d-flex\">\n              {createNumberCol(numbers, 3, 0, enterDigit)}\n              {createNumberCol(numbers, 3, 3, enterDigit)}\n              {createNumberCol(numbers, 3, 6, enterDigit)}\n            </div>\n\n            <div className=\"col\">\n              <Button\n                color=\"brown\"\n                contents=\"÷\"\n                data=\"/\"\n                clickHandler={enterOperation}\n              />\n              <Button\n                color=\"brown\"\n                contents=\"×\"\n                data=\"*\"\n                clickHandler={enterOperation}\n              />\n              <Button\n                color=\"brown\"\n                contents=\"-\"\n                data=\"-\"\n                clickHandler={enterOperation}\n              />\n            </div>\n          </div>\n\n          <div id=\"bottomRow d-flex\">\n            <Button color=\"brown\" contents=\"C\" clickHandler={clear} />\n            <Button\n              color=\"black\"\n              contents=\"0\"\n              data=\"0\"\n              clickHandler={enterDigit}\n            />\n            <Button\n              color=\"brown\"\n              contents=\".\"\n              data=\".\"\n              clickHandler={enterDigit}\n            />\n            <Button\n              color=\"yellow\"\n              contents=\"=\"\n              data=\"=\"\n              clickHandler={() => {\n                displayResult();\n              }}\n            />\n            <Button\n              color=\"brown\"\n              contents=\"+\"\n              data=\"+\"\n              clickHandler={enterOperation}\n            />\n          </div>\n        </div>\n      </CalculatorBody>\n    </Layout>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./app\";\nimport \"./masterStyle.css\";\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}